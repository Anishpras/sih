// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Arbitrator {
  id             String   @id @default(cuid())
  name           String
  description    String
  registrationId String   @unique
  password       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  verified       Boolean  @default(false)
  cases          Case[]
  Admin          Admin    @relation(fields: [adminId], references: [adminId])
  adminId        String
}

model Client {
  id        String   @id @default(cuid())
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String   @unique
  case      Case     @relation(fields: [caseId], references: [id])
  caseId    String
}

model Case {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  caseId      String   @unique

  clients   Client[]
  // hearing             Hearing?            @relation(fields: [hearingId], references: [id])
  orders    Order[]
  award     String?
  annexures Annexure[]

  Arbitrator          Arbitrator?       @relation(fields: [arbitratorId], references: [id])
  arbitratorId        String?
  ArbitrationCentre   ArbitrationCentre @relation(fields: [arbitrationCentreId], references: [id])
  arbitrationCentreId String
}

model Order {
  id          String   @id @default(cuid())
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Case        Case     @relation(fields: [caseId], references: [id])
  caseId      String
}

model ArbitrationCentre {
  id                  String   @id @default(cuid())
  name                String   @unique
  arbitrationCentreId String   @unique
  password            String
  description         String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  mobile              String @unique
otpVerified          Boolean  @default(false)
session              Boolean @default(false)
  Admins              Admin[]
  cases               Case[]
}

model Admin {
  id                  String            @id @default(cuid())
  name                String
  username            String            @unique
  verified            Boolean           @default(false)
  password            String
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  arbitrators         Arbitrator[]
  adminId             String            @unique
  arbitrationCentre   ArbitrationCentre @relation(fields: [arbitrationCentreId], references: [arbitrationCentreId])
  arbitrationCentreId String
}

model Annexure {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  link        String
  Case        Case?    @relation(fields: [caseId], references: [id])
  caseId      String?
}

model MediationCentre {
  id                String           @id @default(cuid())
  name              String           @unique
  mediationCentreId String           @unique
  password          String
  description       String
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  mediationCases    MediationCase[]
  mediationAdmin    MediationAdmin[]
}

model Mediator {
  id                String          @id @default(cuid())
  name              String
  description       String
  registrationId    String          @unique
  password          String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  verified          Boolean         @default(false)
  mediationCases    MediationCase[]
  MediationAdmin    MediationAdmin? @relation(fields: [mediationAdminId], references: [mediationAdminId])
  mediationAdminId  String?
}

model MediationParty {
  id                  String         @id @default(cuid())
  name                String
  password            String
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  username            String         @unique
  MediationCase       MediationCase? @relation(fields: [mediationCaseId], references: [caseId])
  mediationCaseId String?
}

model MediationAdmin {
  id                String          @id @default(cuid())
  name              String
  username          String          @unique
  verified          Boolean         @default(false)
  password          String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  mediators         Mediator[]
  mediationAdminId  String          @unique
  mediationCentre   MediationCentre @relation(fields: [mediationCentreId], references: [id])
  mediationCentreId String
}

model MediationCase {
   id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  caseId      String   @unique

  parties MediationParty[]

  mediationAnnexures MediationAnnexure[]
  mediationTimeLine  MediationTimeLine[]
  mediator           Mediator            @relation(fields: [mediatorId], references: [id])

  mediationCentre   MediationCentre @relation(fields: [mediationCentreId], references: [id])
  mediatorId        String
  mediationCentreId String
}

model MediationTimeLine {
  id                  String         @id @default(cuid())
  description         String
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  MediationCase       MediationCase? @relation(fields: [mediationCaseId], references: [caseId])
  mediationCaseId String?
}

model MediationAnnexure {
  id                  String         @id @default(cuid())
  name                String
  description         String
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  link                String
  MediationCase       MediationCase? @relation(fields: [mediationCaseId], references: [caseId])
  mediationCaseId String?
}
