// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Arbitrator {
  id             String   @id @default(cuid())
  name           String
  description    String
  registrationId String   @unique
  password       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  verified       Boolean  @default(false)
  cases          Case[]
  Admin          Admin   @relation(fields: [adminId], references: [adminId])
  adminId        String
}

model Client {
  id        String   @id @default(cuid())
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String   @unique
  case      Case     @relation(fields: [caseId], references: [id])
  caseId    String
}

model Case {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  caseId      String   @unique

  clients   Client[]
  // hearing             Hearing?            @relation(fields: [hearingId], references: [id])
  orders    Order[]
  award     String?
  annexures Annexure[]

  Arbitrator   Arbitrator? @relation(fields: [arbitratorId], references: [id])
  arbitratorId String?
}

// model Hearing {
//   id          String   @id @default(cuid())
//   name        String
//   description String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   //TODO: Need to add more details about the hearing
//   evidence    String
//   arguements  String
//   Case        Case[]
// }

model Order {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // TODO: Need to add more details about the rewards and orders passed

  Case   Case   @relation(fields: [caseId], references: [id])
  caseId String
}

model ArbitrationCentre {
  id                  String   @id @default(cuid())
  name                String   @unique
  arbitrationCentreId String   @unique
  password            String
  description         String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  Admins              Admin[]
}

model Admin {
  id                  String            @id @default(cuid())
  name                String
  username            String            @unique
  verified            Boolean           @default(false)
  password            String
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  arbitrators         Arbitrator[]
  adminId             String            @unique
  arbitrationCentre   ArbitrationCentre @relation(fields: [arbitrationCentreId], references: [arbitrationCentreId])
  arbitrationCentreId String
}

model Annexure {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  link        String
  Case        Case?    @relation(fields: [caseId], references: [id])
  caseId      String?
}
